{"version":3,"file":"static/js/610.809d7f78.chunk.js","mappings":"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","sources":["components/icons/DropDownIcon.js","components/icons/DropUpIcon.js","components/LauncherPreview/DirectoryView.js","components/LauncherPreview/CodeStyleHljs.js","components/LauncherPreview/FileView.js","components/icons/DragDividerIcon.js","components/LauncherPreview/DividedContainer.js","components/LauncherPreview/ViewCommand.js","components/LauncherPreview/fileMapToDirectoryMap.js","components/LauncherPreview/index.js","components/LauncherPreview/LauncherPreview.js"],"sourcesContent":["import { createSvgIcon } from '@mui/material/utils';\n\nconst DropDownIcon = createSvgIcon(\n    <svg viewBox=\"0 0 15 15\">\n        <g transform=\"translate(-4.5, -4.5)\">\n            <path d=\"m8.71 11.71 2.59 2.59c.39.39 1.02.39 1.41 0l2.59-2.59c.63-.63.18-1.71-.71-1.71H9.41c-.89 0-1.33 1.08-.7 1.71z\" />\n        </g>\n    </svg>,\n    'Github'\n);\n\nexport default DropDownIcon;\n","import { createSvgIcon } from '@mui/material/utils';\n\nconst DropDownIcon = createSvgIcon(\n    <svg viewBox=\"0 0 15 15\">\n        <g transform=\"translate(-4.5 -4.5) rotate(-90 12 12)\">\n            <path d=\"m8.71 11.71 2.59 2.59c.39.39 1.02.39 1.41 0l2.59-2.59c.63-.63.18-1.71-.71-1.71H9.41c-.89 0-1.33 1.08-.7 1.71z\" />\n        </g>\n    </svg>,\n    'Github'\n);\n\nexport default DropDownIcon;\n","import React from 'preact/compat';\nimport { useState, useMemo, useRef } from 'preact/hooks';\n\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Stack from '@mui/material/Stack';\n\nimport FolderClosedIcon from '@mui/icons-material/FolderRounded';\nimport FolderOpenIcon from '@mui/icons-material/FolderOpenRounded';\nimport FileIcon from '@mui/icons-material/InsertDriveFileRounded';\nimport DropDownIcon from '../icons/DropDownIcon';\nimport DropUpIcon from '../icons/DropUpIcon';\n\nimport colors from '../colors';\n\nconst getSortedFileNames = (files) => {\n    if (!files) return [];\n\n    let fileNames = Object.keys(files);\n    return fileNames.sort((a, b) => {\n        if (files[a].isDirectory !== files[b].isDirectory) {\n            return files[b].isDirectory ? 1 : -1;\n        }\n        return a > b ? 1 : -1;\n    });\n}\n\nconst DirectoryView = ({directory, currentFile, viewFile, selectFile}) => {\n    const files = directory?.contents;\n    const fileNames = useMemo(() => getSortedFileNames(files), [files]);\n\n    return (\n    <Box\n        sx={{\n            width: '100%',\n            height: '100%',\n            boxSizing: 'border-box',\n            flexShrink: 0,\n            overflow: 'auto',\n            color: colors.primaryText,\n            fontWeight: 300,\n            padding: '12px 2px 12px 12px',\n            '& .MuiSvgIcon-root': {\n                display: 'block',\n                color: colors.primaryText,\n                opacity: 0.5,\n                fontSize: '14px'\n            }\n        }}\n    >\n        <Box\n            sx={{\n                minWidth: '100%',\n                width: 'fit-content'\n            }}\n        >\n            {files && fileNames.map(fileName =>\n                <File file={files[fileName]} key={fileName}\n                    currentFile={currentFile} viewFile={viewFile} selectFile={selectFile} />\n            )}\n        </Box>\n    </Box>\n    );\n};\n\nconst Directory = ({directory, currentFile, viewFile, selectFile, openByDefault=false}) => {\n    const files = directory.contents;\n    const fileNames = useMemo(() => getSortedFileNames(files), [files]);\n\n    const [open, setOpen] = useState(openByDefault);\n    const toggleOpen = () => {\n        setOpen(open => !open);\n    };\n\n    return (\n    <Box\n        sx={{\n            transition: 'height 0.3s',\n            maxHeight: open ? 'unset' : '20px',\n            overflow: 'hidden'\n        }}\n    >\n        <Button\n            onClick={toggleOpen}\n            sx={{\n                display: 'flex',\n                justifyContent: 'flex-start',\n                flexDirection: 'row',\n                alignItems: 'center',\n                padding: '0 4px 0 0',\n                color: 'inherit',\n                textTransform: 'none',\n                '& .MuiTypography-root': {\n                    padding: '4px 5px 2px',\n                    lineHeight: '14px',\n                    whiteSpace: 'nowrap'\n                },\n                '&:hover': {\n                    backgroundColor: colors.featureBackground + '40',\n                    borderRadius: '4px'\n                }\n            }}\n        >\n            { open ? <DropDownIcon /> : <DropUpIcon /> }\n            { open ? <FolderOpenIcon /> : <FolderClosedIcon /> }\n            <Typography> {directory.name} </Typography>\n        </Button>\n        <Box\n            sx={{\n                marginLeft: '20px'\n            }}\n        >\n            { open && fileNames.map(fileName =>\n                <File file={files[fileName]} viewFile={viewFile} selectFile={selectFile} currentFile={currentFile}\n                    key={fileName} openByDefault={fileNames.length <= 1} />\n            )}\n        </Box>\n    </Box>\n    )\n};\n\nconst File = ({file, currentFile, viewFile, selectFile, openByDefault=false}) => {\n    if (file.isDirectory) {\n        return <Directory directory={file} openByDefault={openByDefault}\n            viewFile={viewFile} selectFile={selectFile} currentFile={currentFile} />\n    }\n\n    const handleClick = (e) => {\n        if (e.detail === 1) {\n            viewFile(file);\n        } else if (e.detail === 2) {\n            selectFile(file);\n        }\n    }\n    // const fileColor = file.diff ? '#cbffd8' : '#cdb38b'; \n    const ADD_COLOR = '#98d268', MODIFY_COLOR = '#f59e40';\n    const fileColor = file.diff ? (file.isNew ? ADD_COLOR : MODIFY_COLOR) : 'inherit';\n    const selectedFileBackground = file.diff ? (file.isNew ? ADD_COLOR : MODIFY_COLOR) : colors.featureBackground;\n\n    const selected = currentFile === file;\n    return (\n    <Button\n        onClick={ handleClick }\n        className={selected ? \"selected\" : \"\"}\n        sx={{\n            color: fileColor,\n            textTransform: 'none',\n            display: 'flex',\n            justifyContent: 'flex-start',\n            flexDirection: 'row',\n            alignItems: 'center',\n            padding: '0 4px 0 14px',\n            borderRadius: '4px',\n            '& .MuiTypography-root': {\n                whiteSpace: 'nowrap',\n                padding: '4px 5px 2px',\n                lineHeight: '14px',\n            },\n            '& .MuiSvgIcon-root': {\n                color: fileColor\n            },\n            '&:hover': {\n                backgroundColor: colors.featureBackground + '40',\n            },\n            '&.selected': {\n                backgroundColor: selectedFileBackground,\n                color: colors.primaryTextInverted,\n                '& .MuiSvgIcon-root': {\n                    color: colors.ternaryTextInverted,\n                }\n            }\n        }}\n    >\n        <FileIcon/>\n        <Typography> {file.name} </Typography>\n    </Button>\n    );\n};\n\nexport default DirectoryView;\n","import colors from '../colors';\n\nconst black = \"#000000\";\nconst grey = \"#333333\";;\nconst blue = \"#6699cc\";\nconst blue2 = \"#4e5a65\";\nconst blue3 = \"#343d46\";\nconst blue4 = \"#647382\";\nconst blue5 = \"#5fb4b4\";\nconst blue6 = \"#a6acb9\";\nconst blue7 = \"#8aa5cf\";\nconst green = \"#99c794\";\nconst orange = \"#f9ae58\";\nconst orange2 = \"#ee932b\";\nconst orange3 = \"#fac761\";\nconst red = \"#ec5f66\";\nconst red2 = \"#f97b58\";\nconst pink = \"#c695c6\";\nconst white = \"#ffffff\";\nconst white2 = \"#f7f7f7\";\nconst white3 = \"#d8dee9\";\n\nexport default {\n    \"hljs-comment\": {\n        \"color\": blue6\n    },\n    \"hljs-quote\": {\n        \"color\": green\n    },\n    \"hljs-variable\": {\n        \"color\": orange2\n    },\n    \"hljs-template-variable\": {\n        \"color\": red\n    },\n    \"hljs-tag\": {\n        \"color\": pink\n    },\n    \"hljs-name\": {\n        \"color\": blue5\n    },\n    \"hljs-selector-id\": {\n        \"color\": green\n    },\n    \"hljs-selector-class\": {\n        \"color\": green\n    },\n    \"hljs-regexp\": {\n        \"color\": green\n    },\n    \"hljs-deletion\": {\n        \"color\": orange3\n    },\n    \"hljs-number\": {\n        \"color\": orange\n    },\n    \"hljs-built_in\": {\n        \"color\": blue\n    },\n    \"hljs-builtin-name\": {\n        \"color\": blue\n    },\n    \"hljs-literal\": {\n        \"color\": green\n    },\n    \"hljs-type\": {\n        \"color\": pink\n    },\n    \"hljs-params\": {\n        \"color\": orange2\n    },\n    \"hljs-meta\": {\n        \"color\": blue5\n    },\n    \"hljs-link\": {\n        \"color\": pink\n    },\n    \"hljs-attribute\": {\n        \"color\": pink\n    },\n    \"hljs-string\": {\n        \"color\": green\n    },\n    \"hljs-symbol\": {\n        \"color\": pink\n    },\n    \"hljs-bullet\": {\n        \"color\": \"#abe338\"\n    },\n    \"hljs-addition\": {\n        \"color\": \"#abe338\"\n    },\n    \"hljs-title\": {\n        \"color\": pink\n    },\n    \"hljs-section\": {\n        \"color\": pink\n    },\n    \"hljs-keyword\": {\n        \"color\": pink\n    },\n    \"hljs-selector-tag\": {\n        \"color\": orange3\n    },\n    \"hljs\": {\n        \"margin\": 0,\n        \"display\": \"block\",\n        \"overflowX\": \"auto\",\n        \"background\": colors.codeBackground,\n        \"color\": white3,\n        \"padding\": \"0.5em\"\n    },\n    \"hljs-emphasis\": {\n        \"fontStyle\": \"italic\"\n    },\n    \"hljs-strong\": {\n        \"fontWeight\": \"bold\"\n    }\n}","import React from 'preact/compat';\nimport { useMemo, useState } from 'preact/hooks';\n\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport highlighterStyle from './CodeStyleHljs';\n\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DownloadIcon from '@mui/icons-material/GetAppRounded';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport CheckIcon from '@mui/icons-material/Check';\n\nimport Table from '@mui/material/Table';\nimport TableCell from '@mui/material/TableCell';\nimport TableRow from '@mui/material/TableRow';\n\nimport CloseIcon from '../icons/CloseIcon';\nimport colors from '../colors';\nimport { clip } from '../../state/utils';\n\nvar FileSaver = require('file-saver');\n\nconst FileView = ({setCurrentFile, closeFile, currentFile, viewedFile, selectedFiles}) => {\n    return (\n    <Box\n        sx={{\n            width: '100%',\n            height: '100%',\n            boxSizing: 'border-box'\n        }}\n    >\n        <FileHeader setCurrentFile={setCurrentFile} closeFile={closeFile} currentFile={currentFile}\n            viewedFile={viewedFile} selectedFiles={selectedFiles} />\n        <FileContent file={currentFile} />\n    </Box>\n    );\n};\n\nconst FileHeader = ({setCurrentFile, closeFile, currentFile, viewedFile, selectedFiles}) => {\n    const [scrollableLeft, setScrollableLeft] = useState(0);\n    const [scrollableRight, setScrollableRight] = useState(1);\n\n    const handleScroll = useMemo(() => (e) => {\n        const leftDifference = e.target.scrollLeft;\n        const rightDifference = e.target.scrollWidth - e.target.parentElement.scrollWidth - e.target.scrollLeft;\n        setScrollableLeft(clip(leftDifference / 40, 0, 1));\n        setScrollableRight(clip(rightDifference / 40, 0, 1));\n    }, [setScrollableLeft, setScrollableRight]);\n\n    return (\n    <Box\n        sx={{\n            position: 'relative',\n            paddingTop: '4px',\n            height: '40px',\n            overflow: 'hidden'\n        }}\n    >\n        <Box\n            onScroll={handleScroll}\n            sx={{\n                overflowX: 'auto'\n             }}\n        >\n            <Stack direction=\"row\" sx={{ width: 'fit-content'}} >\n                { viewedFile &&\n                    <FileHeaderItem setCurrentFile={setCurrentFile} closeFile={closeFile}\n                        file={viewedFile} selected={viewedFile === currentFile} />\n                }\n                { selectedFiles && selectedFiles.map(file =>\n                    <FileHeaderItem setCurrentFile={setCurrentFile} closeFile={closeFile}\n                        file={file} selected={file === currentFile} key={file.path} />\n                )}\n            </Stack>\n        </Box>\n        <Box\n            sx={{\n                opacity: scrollableLeft,\n                position: 'absolute',\n                pointerEvents: 'none',\n                left: 0,\n                top: 0,\n                height: '100%',\n                width: '100px',\n                background: `linear-gradient(to left, ${colors.featureSelectorBackground + '00'}, ${colors.featureSelectorBackground})`,\n            }}\n        />\n        <Box\n            sx={{\n                opacity: scrollableRight,\n                position: 'absolute',\n                pointerEvents: 'none',\n                right: 0,\n                top: 0,\n                height: '100%',\n                width: '100px',\n                background: `linear-gradient(to right, ${colors.featureSelectorBackground + '00'}, ${colors.featureSelectorBackground})`\n            }}\n        />\n    </Box>\n    );\n};\n\nconst FileHeaderItem = ({setCurrentFile, closeFile, file, selected=false}) => {\n    const handleCloseClick = (e) => {\n        closeFile(file);\n        e.stopPropagation();\n    }\n\n    return (\n    <Button\n        onClick={() => setCurrentFile(file) }\n        sx={{\n            height: '40px',\n            whiteSpace: 'nowrap',\n            padding: '2px 0 0 20px',\n            color: colors.primaryText,\n            backgroundColor: selected ? colors.codeBackground : colors.codeBackgroundInactive,\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            margin: '0 10px',\n            borderRadius: '8px 8px 0 0',\n            textTransform: 'none',\n            fontSize: '14px',\n            '& .MuiTypography-root': {\n                overflow: 'hidden'\n            },\n            ':hover': {\n                backgroundColor: colors.codeBackgroundHover\n            }\n        }}\n    >\n        <Typography sx={{ paddingTop: '3px' }}> {file.name} </Typography>\n        <IconButton\n            onClick={handleCloseClick}\n            sx={{\n                padding: '4px',\n                margin: '6px',\n                '&:hover': {\n                    backgroundColor: colors.featureSelectorBackground\n                },\n                '& .MuiSvgIcon-root': {\n                    stroke: colors.primaryText,\n                    fontSize: '14px'\n                }\n            }}\n        >\n            <CloseIcon />\n        </IconButton>\n    </Button>\n    );\n}\n\nconst FileContent = ({file}) => {\n    let language;\n    const [copiedStateValue, setCopiedState] = useState(false);\n    const extension = file && file.name.slice(file.name.lastIndexOf(\".\") + 1).toLowerCase();\n    switch (extension) {\n        case \"java\":\n        case \"kotlin\":\n        case \"gradle\":\n        case \"properties\":\n        case \"sql\":\n        case \"yaml\":\n        case \"xml\":\n        case \"css\":\n        case \"patch\":\n            language = extension;\n            break;\n        case \"yml\":\n            language = \"yaml\";\n            break;\n        case \"md\":\n            language = \"markdown\";\n            break;\n        case \"html\":\n            language = \"vbscriptHtml\";\n            break;\n        default:\n            language = \"plaintext\";\n            break;\n    }\n\n    function handleFileDownload() {\n        let newFile;\n        if (typeof file.diff !== 'undefined') {\n            let afterChanges = file.diff.map((line) => {\n                if (!line.skip && !line.before) {\n                    return line.content;\n                }\n                return 'undefined';\n            }).filter((line) => typeof line !== 'undefined');\n            newFile = new Blob([afterChanges.join('\\n')]);\n        } else {\n            newFile = new Blob([file.content]);\n        }\n        FileSaver.saveAs(newFile, file.name);\n    }\n\n    async function handleFileCopy() {\n        if (typeof file.diff !== 'undefined') {\n            let afterChanges = file.diff.map((line) => {\n                if (!line.skip && !line.before) {\n                    return line.content;\n                } \n                return 'undefined';\n            }).filter((line) => typeof line !== 'undefined');\n            await navigator.clipboard.writeText(afterChanges.join('\\n'));\n        } else {\n            await navigator.clipboard.writeText(file.content);\n        }\n        setCopiedState(true);\n        setTimeout(function() {\n            setCopiedState(false);\n        }, 3000);\n    }\n\n    return (\n    <Box\n        sx={{\n            height: 'calc(100% - 44px)',\n            overflow: 'auto'\n        }}\n    >\n        <Box\n            sx={{\n                minWidth: '100%',\n                minHeight: '100%',\n                backgroundColor: colors.codeBackground,\n                width: 'fit-content'\n            }}\n        >\n            { file && file.content &&\n                <SyntaxHighlighter\n                    useInlineStyles=\"false\"\n                    language={language}\n                    style={ highlighterStyle }\n                    showLineNumbers={ true }\n                >\n                    { file.content }\n                </SyntaxHighlighter>\n            }\n\n            { file && file.diff &&\n                <DiffHighlighter file={ file } language={ language } highlighterStyle={ highlighterStyle } />\n            }\n\n            { file && !file.content && (file.isExecutable || file.isBinary) &&\n                <Box\n                    sx={{\n                        width: '100%',\n                        paddingTop: '20px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        '& .MuiTypography-root': {\n                            fontSize: '20px',\n                            color: colors.secondaryText\n                        }\n                    }}\n                >\n                    {file.isExecutable &&\n                        <>\n                            <Typography>\n                                This is an executable file\n                            </Typography>\n                            <Typography>\n                                Download the project locally to run it\n                            </Typography>\n                        </>\n                    }\n                    {file.isBinary &&\n                        <Typography>\n                            This is a binary file\n                        </Typography>\n                    }\n                </Box>\n            }\n        </Box>\n        { file && file.content && \n        <IconButton\n            onClick={handleFileDownload}\n            sx= {{\n                borderRadius: '4px',\n                padding: '15px',\n                position: 'absolute',\n                bottom: 30,\n                right: 25,\n                width: 48,\n                height: 48,\n                backgroundColor: colors.action,\n                '&:hover': {\n                    backgroundColor: colors.actionHover\n                },\n                '&:disabled': {\n                    backgroundColor: colors.actionDisabled\n                },\n                '& .MuiSvgIcon-root': {\n                    color: colors.primaryText,\n                    fontSize: '25px'\n                }\n            }}\n        >\n            <DownloadIcon />\n        </IconButton>}\n        { file && file.content && \n        <IconButton\n            onClick={handleFileCopy}\n            disabled={copiedStateValue}\n            sx= {{\n                borderRadius: '4px',\n                padding: '15px',\n                position: 'absolute',\n                bottom: 30,\n                right: 90,\n                width: 48,\n                height: 48,\n                backgroundColor: colors.action,\n                '&:hover': {\n                    backgroundColor: colors.actionHover\n                },\n                '&:disabled': {\n                    backgroundColor: colors.actionDisabled\n                },\n                '& .MuiSvgIcon-root': {\n                    color: colors.primaryText,\n                    fontSize: '25px'\n                }\n            }}\n        >\n            {copiedStateValue ? \n            <CheckIcon /> : \n            <ContentCopyIcon />\n            }\n        </IconButton>}\n    </Box>\n    );\n}\n\nconst DiffHighlighter = ({ file, language, highlighterStyle }) => {\n    return (<Table sx ={{\n        backgroundColor: '#2e3949',\n        '& .MuiTableCell-root': {\n            fontSize: 'unset',\n            padding: '0 0 0 1.5em',\n            border: 'none',\n            lineHeight: 1.1,\n            '&.code-line-number': {\n                textAlign: 'right',\n                color: \"#d8dee9\",\n                width: '2em',\n                userSelect: 'none'\n            },\n            '&.code-line-symbol': {\n                width: '1em',\n                textAlign: 'right',\n                userSelect: 'none'\n            },\n        },\n        '& .MuiTableRow-root': {\n            '&.skip': {\n                backgroundColor: '#3c4659',\n                '& .MuiTableCell-root': {\n                    textAlign: 'left',\n                    lineHeight: 2,\n                    color: \"#a1b5e1\",\n                    userSelect: 'none'\n                }\n            },\n            '&.add .MuiTableCell-root': {\n                backgroundColor: '#2e4939'\n            },\n            '&.remove .MuiTableCell-root': {\n                backgroundColor: '#573c32'\n            },\n            '&.add .code-line-symbol': {\n                color: \"#98d268\"\n            },\n            '&.remove .code-line-symbol': {\n                color: \"#d27868\"\n            }\n        }\n    }}>\n        {file.diff && file.diff.map(line =>\n            line.skip ?\n            <TableRow className=\"skip\">\n                <TableCell colSpan={3}></TableCell>\n                <TableCell><code>...</code></TableCell>\n            </TableRow> :\n            <TableRow className={line.before ? \"remove\" : line.after ? \"add\" : \"\"}>\n                <TableCell className={\"code-line-symbol\"}> <code> {line.after ? \"+\" : line.before ? \"-\" : \"\"} </code> </TableCell>\n                <TableCell className={\"code-line-number\"}> <code> {line.numberBefore} </code> </TableCell>\n                <TableCell className={\"code-line-number\"}> <code> {line.numberAfter} </code> </TableCell>\n                <TableCell>\n                    <SyntaxHighlighter\n                        useInlineStyles=\"false\"\n                        language={language}\n                        style={ highlighterStyle }\n                        showLineNumbers={ false }\n                        customStyle = {{ padding: '1px', background: 'none' }}\n                    >\n                        { line.content }\n                    </SyntaxHighlighter>\n                </TableCell>\n            </TableRow>\n        )}\n        \n    </Table>\n    );\n}\n\nexport default FileView;","import SvgIcon from '@mui/material/SvgIcon';\n\nconst DragDividerIcon = () => {\n    return <SvgIcon\n         viewBox=\"0 0 6 16\"\n    >\n         <circle cx=\"3\" cy=\"3\" r=\"2\" />\n         <circle cx=\"3\" cy=\"8\" r=\"2\" />\n         <circle cx=\"3\" cy=\"13\" r=\"2\" />\n    </SvgIcon>\n};\n\nexport default DragDividerIcon;\n","import React from 'preact/compat';\nimport { useState, useMemo } from 'preact/hooks';\n\nimport Box from '@mui/material/Box';\n\nimport DragDividerIcon from '../icons/DragDividerIcon';\nimport { clip } from '../../state/utils';\n\nconst dividerWidth = 6;\n\nconst DividedContainer = ({left, right}) => {\n    const [dividerPos, setDividerPos] = useState(280);\n\n    return <>\n        <Box\n            sx={{\n                width: `${dividerPos}px`,\n                overflow: 'hidden'\n            }}\n        >\n            {left}\n        </Box>\n        <Divider dividerPos={dividerPos} setDividerPos={setDividerPos} />\n        <Box\n            sx={{\n                width: `calc(100% - ${dividerPos + dividerWidth}px)`,\n                overflow: 'hidden'\n            }}\n        >\n            {right}\n        </Box>\n    </>\n};\n\nconst Divider = ({dividerPos, setDividerPos}) => {\n    const [currentDividerMove, setCurrentDividerMove] = useState(0);\n\n    const handleMouseDown = useMemo(() => (e) => {\n        const startMouseX = e.clientX;\n        const target = e.target;\n        let handleMouseUp, handleMouseMove;\n\n        const getMove = (e) => {\n            const width = target.parentElement.parentElement.scrollWidth;\n            const move = clip(e.clientX - startMouseX, -dividerPos, width - dividerPos - dividerWidth);\n            return move;\n        }\n\n        handleMouseUp = (e) => {\n            document.removeEventListener('mouseup', handleMouseUp);\n            document.removeEventListener('mousemove', handleMouseMove);\n            setDividerPos(dividerPos + getMove(e));\n            setCurrentDividerMove(0);\n        };\n\n        handleMouseMove = (e) => {\n            setCurrentDividerMove(getMove(e));\n        };\n\n        document.addEventListener('mouseup', handleMouseUp);\n        document.addEventListener('mousemove', handleMouseMove);\n    }, [setCurrentDividerMove, setDividerPos, dividerPos]);\n\n    return (\n    <Box\n        sx={{\n            position: 'relative',\n            width: `${dividerWidth}px`,\n            height: '100%'\n        }}\n    >\n        <Box\n            onMouseDown={handleMouseDown}\n            sx={{\n                top: 0,\n                left: `${currentDividerMove}px`,\n                width: '100%',\n                height: '100%',\n                position: 'absolute',\n                backgroundColor: '#4a5462',\n                cursor: 'ew-resize',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-around',\n                alignItems: 'center',\n                '& .MuiSvgIcon-root': {\n                    width: '6px',\n                    height: '16px',\n                    color: '#FFFFFF',\n                    pointerEvents: 'none',\n                    /* required */\n                    transform: 'translate(0.2, 0)'\n                }\n            }}\n        >\n            <DragDividerIcon />\n        </Box>\n    </Box>\n    );\n};\n\nexport default DividedContainer;\n","import React from 'preact/compat';\nimport { useState } from 'preact/hooks';\n\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport colors from '../colors';\nimport { LauncherPopup } from '../LauncherPopups';\nimport CodeIcon from '@mui/icons-material/Code';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { Stack, Box, IconButton, Typography } from '@mui/material';\n\nconst ViewCommand = ({contents, open, onClose}) => {\n    const [currentContents, setCurrentContents] = useState(null);\n\n    const [copiedStateValue, setCopiedState] = useState(false);\n\n    async function handleCommandCopy() {\n        await navigator.clipboard.writeText(contents.cli);\n        setCopiedState(true);\n        setTimeout(function() {\n            setCopiedState(false);\n        }, 3000);\n    }\n\n    return (\n        <LauncherPopup\n            title='Other ways to build this configuration'\n            open={open}\n            onClose={onClose}\n            Icon={CodeIcon}\n            iconColor={colors.option}\n            sx={{\n                flexDirection: 'row',\n                padding: 0,\n                flexGrow: 1,\n                alignItems: 'stretch'\n            }}\n        >\n            <Box\n                sx={{\n                    color: colors.primaryText,\n                    padding: '10px 10px 20px'\n                }}\n            >\n                <Typography sx={{ padding: '10px', fontSize: '20px' }}>Using the GCN CLI</Typography>\n                <Stack\n                    direction=\"row\"\n                    spacing=\"0\"\n                    sx={{\n                        color: colors.primaryText,\n                        borderRadius: '4px',\n                        padding: '10px 20px 10px',\n                        marginLeft: '10px',\n                    }}\n                >\n                    <Box\n                        sx={{\n                            width: 'calc(100% - 100px)'\n                        }}\n                    >\n                        <SyntaxHighlighter\n                            style={{ \n                                'hljs': {\n                                    \"margin\": 0,\n                                    \"display\": \"block\",\n                                    \"background\": colors.codeBackground,\n                                    \"color\": '#d8dee9',\n                                    \"padding\": \"0.5em\",\n                                    \"overflow-wrap\": \"break-word\"\n                                } \n                            }}\n                            wrapLongLines\n                        >\n                            { contents && contents.cli }\n                        </SyntaxHighlighter>\n                    </Box>\n                    <Box\n                        sx={{\n                            paddingLeft: '10px',\n                            width: '60px'\n                        }}\n                    >\n                        <IconButton\n                            onClick={handleCommandCopy}\n                            disabled={copiedStateValue}\n                            sx= {{\n                                borderRadius: '4px',\n                                padding: '10px',\n                                backgroundColor: colors.action,\n                                width: 48,\n                                height: 48,\n                                '&:hover': {\n                                    backgroundColor: colors.actionHover\n                                },\n                                '&:disabled': {\n                                    backgroundColor: colors.actionDisabled\n                                },\n                                '& .MuiSvgIcon-root': {\n                                    color: colors.primaryText,\n                                    fontSize: '25px'\n                                }\n                            }}\n                        >\n                            {copiedStateValue ? \n                            <CheckIcon /> : \n                            <ContentCopyIcon />\n                            }\n                        </IconButton>\n                    </Box>\n                </Stack>\n            </Box>\n        </LauncherPopup>\n    );\n};\n\nexport default ViewCommand;","const fileMapToDirectoryMap = (fileMap) => {\n    const directoryMap = { isDirectory: true, contents: {} };\n\n    if (!fileMap) {\n        return directoryMap;\n    }\n\n    for (let path in fileMap) {\n        let parts = path.split('/');\n        const fileName = parts[parts.length - 1];\n        parts = parts.slice(0, parts.length - 1);\n\n        let directory = directoryMap;\n        for (let part of parts) {\n            if (!directory.contents[part] || !directory.contents[part].isDirectory) {\n                directory.contents[part] = { isDirectory: true, contents: {}, name: part };\n            }\n            directory = directory.contents[part];\n        }\n        directory.contents[fileName] = {...fileMap[path], name: fileName, path: path };\n    }\n\n    return directoryMap;\n};\n\nexport default fileMapToDirectoryMap;\n","import LauncherPreview from './LauncherPreview';\n\nexport default LauncherPreview;\n","import React from 'preact/compat';\nimport { useMemo, useState, useEffect } from 'preact/hooks';\n\nimport colors from '../colors';\nimport { LauncherPopup } from '../LauncherPopups';\nimport DirectoryView from './DirectoryView';\nimport FileView from './FileView';\nimport DividedContainer from './DividedContainer';\nimport ViewCommand from './ViewCommand';\nimport fileMapToDirectoryMap from './fileMapToDirectoryMap';\nimport PreviewIcon from '@mui/icons-material/FindInPageRounded';\nimport DiffIcon from '@mui/icons-material/SwapHorizRounded';\n\nconst LauncherPreview = ({ isDiff, isCommand, contents, clearContents }) => {\n    const [viewedFile, setViewedFile] = useState(null);\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [currentFile, setCurrentFile] = useState(null);\n\n    const toggleOpen = () => {\n        setViewedFile(null);\n        setSelectedFiles([]);\n        setCurrentFile(null);\n        clearContents();\n    };\n\n    const directoryMap = useMemo(() => fileMapToDirectoryMap(contents), [contents]);\n\n    const title = isDiff ? \"Preview of differences between selection and baseline\" : \"Preview of project\";\n    const icon = isDiff ? DiffIcon : PreviewIcon;\n\n    const selectFile = useMemo(() => (file) => {\n        if (file === viewedFile) {\n            setViewedFile(null);\n        }\n        setCurrentFile(file);\n        setSelectedFiles(files => {\n            if (files.indexOf(file) === -1) {\n                return [file, ...files];\n            }\n            return files;\n        });\n    }, [setSelectedFiles, setCurrentFile, viewedFile]);\n\n    const viewFile = useMemo(() => (file) => {\n        setCurrentFile(file);\n        if (selectedFiles.indexOf(file) === -1) {\n            setViewedFile(file);\n        }\n    }, [setCurrentFile, setViewedFile, selectedFiles]);\n\n    const closeFile = useMemo(() => (file) => {\n        if (file === viewedFile) {\n            setViewedFile(null);\n            if (file === currentFile) {\n                setCurrentFile(selectedFiles[0] || null);\n            }\n        } else {\n            const index = selectedFiles.indexOf(file);\n            setSelectedFiles(selectedFiles.filter((_, i) => i !== index));\n            if (file === currentFile) {\n                setCurrentFile(selectedFiles[index + 1] || selectedFiles[index - 1] || null);\n            }\n        }\n    }, [setViewedFile, setSelectedFiles, setCurrentFile, viewedFile, selectedFiles, currentFile]);\n    \n\n    return ( \n        <>\n            {isCommand\n                ? <ViewCommand\n                    contents={ contents }\n                    open={ !!contents }\n                    onClose={ toggleOpen }\n                />\n                : <LauncherPopup\n                    title={title}\n                    open={!!contents}\n                    onClose={toggleOpen}\n                    Icon={icon}\n                    iconColor={colors.option}\n                    fullHeight={true}\n                    fullWidth={true}\n                    sx={{\n                        flexDirection: 'row',\n                        padding: 0,\n                        flexGrow: 1,\n                        alignItems: 'stretch'\n                    }}\n                >\n                    <DividedContainer\n                        left={\n                            <DirectoryView directory={directoryMap} currentFile={currentFile}\n                                selectFile={selectFile} viewFile={viewFile} />\n                        }\n                        right={\n                            <FileView setCurrentFile={setCurrentFile} closeFile={closeFile} currentFile={currentFile}\n                                viewedFile={viewedFile} selectedFiles={selectedFiles} />\n                        }\n                    />\n                </LauncherPopup>\n            }\n        </>\n    );\n};\n\nexport default LauncherPreview;\n"],"names":["createSvgIcon","_jsx","viewBox","children","transform","d","getSortedFileNames","files","Object","keys","sort","a","b","isDirectory","Directory","_ref2","directory","currentFile","viewFile","selectFile","_ref2$openByDefault","openByDefault","contents","fileNames","useMemo","_useState","useState","_useState2","_slicedToArray","open","setOpen","_jsxs","Box","sx","transition","maxHeight","overflow","Button","onClick","display","justifyContent","flexDirection","alignItems","padding","color","textTransform","lineHeight","whiteSpace","backgroundColor","colors","borderRadius","DropDownIcon","DropUpIcon","FolderOpenIcon","FolderClosedIcon","Typography","name","marginLeft","map","fileName","File","file","length","_ref3","_ref3$openByDefault","ADD_COLOR","MODIFY_COLOR","fileColor","diff","isNew","selectedFileBackground","selected","e","detail","className","FileIcon","_ref","width","height","boxSizing","flexShrink","fontWeight","opacity","fontSize","minWidth","blue","blue5","green","orange2","orange3","pink","FileSaver","require","FileHeader","setCurrentFile","closeFile","viewedFile","selectedFiles","scrollableLeft","setScrollableLeft","_useState3","_useState4","scrollableRight","setScrollableRight","handleScroll","leftDifference","target","scrollLeft","rightDifference","scrollWidth","parentElement","clip","position","paddingTop","onScroll","overflowX","Stack","direction","FileHeaderItem","path","pointerEvents","left","top","background","concat","right","_ref3$selected","margin","IconButton","stopPropagation","stroke","CloseIcon","FileContent","_ref4","language","_useState5","_useState6","copiedStateValue","setCopiedState","extension","slice","lastIndexOf","toLowerCase","_handleFileCopy","_asyncToGenerator","_regeneratorRuntime","mark","_callee","afterChanges","wrap","_context","prev","next","line","skip","before","content","filter","navigator","clipboard","writeText","join","setTimeout","stop","apply","arguments","minHeight","SyntaxHighlighter","useInlineStyles","style","highlighterStyle","showLineNumbers","DiffHighlighter","isExecutable","isBinary","_Fragment","newFile","Blob","saveAs","bottom","DownloadIcon","disabled","CheckIcon","ContentCopyIcon","_ref5","Table","border","textAlign","userSelect","TableRow","TableCell","colSpan","after","numberBefore","numberAfter","customStyle","SvgIcon","cx","cy","r","Divider","dividerPos","setDividerPos","currentDividerMove","setCurrentDividerMove","handleMouseDown","handleMouseUp","handleMouseMove","startMouseX","clientX","getMove","document","removeEventListener","addEventListener","onMouseDown","cursor","DragDividerIcon","onClose","_handleCommandCopy","cli","LauncherPopup","title","Icon","CodeIcon","iconColor","flexGrow","spacing","wrapLongLines","paddingLeft","fileMap","directoryMap","parts","split","_step","_iterator","_createForOfIteratorHelper","s","n","done","part","value","err","f","_objectSpread","isDiff","isCommand","clearContents","setViewedFile","setSelectedFiles","toggleOpen","fileMapToDirectoryMap","icon","DiffIcon","PreviewIcon","indexOf","_toConsumableArray","index","_","i","ViewCommand","fullHeight","fullWidth","DividedContainer","DirectoryView","FileView"],"sourceRoot":""}